<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/26/2018 10:25:03 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="JFS430619"
  DTS:CreatorName="CUYAHOGA\GreenG"
  DTS:DTSID="{F6FD78DE-2520-4E76-AC3C-1B9B9514A482}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.92"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadPES"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="13"
  DTS:VersionGUID="{C9D85EA4-694F-4B13-B109-30E87725C4DF}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load Canonical Answers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{AE5F6F22-1C67-4C54-B49C-535A4A47ECED}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Canonical Answers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Canonical Answers\Answer JOIN Question"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Answer JOIN Question"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select 
   a.*,q.LookupUID
From
        [CC-PE-Screening].dbo.Answer a
        Join
        [CC-PE-Screening].dbo.Question q
        ON a.QuestionUID = q.uidQuestion
    JOIN
    [CC-PE-Screening].dbo.Interview iv
    ON 
		a.InterviewUid = iv.uidInterview And
		 iv.start &gt; '6/30/2015'

Where
   iv.Start &gt; (
        Select MAX(start) from 
            [CC-PE-Screening].dbo.CanAnswers ca
            JOIN
            [CC-PE-Screening].dbo.Interview iv
            ON ca.InterviewUid = iv.uidInterview)
    
order by
     iv.Start</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Canonical Answers\Answer JOIN Question.Connections[IDbConnection]"
                  connectionManagerID="{E953AD96-3E6C-4AEF-9BC6-73F72A2203F1}:external"
                  connectionManagerRefId="Project.ConnectionManagers[CC-PE-Screening sa]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[uidAnswer]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[uidAnswer]"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[uidAnswer]"
                      name="uidAnswer"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[InterviewUid]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[InterviewUid]"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[InterviewUid]"
                      name="InterviewUid"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[QuestionUid]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[QuestionUid]"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[QuestionUid]"
                      name="QuestionUid"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[Answer]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[Answer]"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[Answer]"
                      name="Answer"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[LookupUID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[LookupUID]"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[LookupUID]"
                      name="LookupUID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[uidAnswer]"
                      dataType="i4"
                      name="uidAnswer" />
                    <externalMetadataColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[InterviewUid]"
                      dataType="i4"
                      name="InterviewUid" />
                    <externalMetadataColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[QuestionUid]"
                      dataType="i4"
                      name="QuestionUid" />
                    <externalMetadataColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[Answer]"
                      dataType="nText"
                      name="Answer" />
                    <externalMetadataColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].ExternalColumns[LookupUID]"
                      dataType="i4"
                      name="LookupUID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[uidAnswer]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[uidAnswer]"
                      name="uidAnswer" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[InterviewUid]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[InterviewUid]"
                      name="InterviewUid" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[QuestionUid]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[QuestionUid]"
                      name="QuestionUid" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[Answer]"
                      dataType="nText"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[Answer]"
                      name="Answer" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[LookupUID]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[LookupUID]"
                      name="LookupUID" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Canonical Answers\Convert Answer to ASCII"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Convert Answer to ASCII"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load Canonical Answers\Convert Answer to ASCII.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Canonical Answers\Convert Answer to ASCII.Inputs[Derived Column Input].Columns[Answer]"
                      cachedDataType="nText"
                      cachedName="Answer"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[Answer]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load Canonical Answers\Convert Answer to ASCII.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Output].Columns[PTAnswer]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8000"
                      lineageId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Output].Columns[PTAnswer]"
                      name="PTAnswer"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,8000,1252)(DT_WSTR,8000)#{Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[Answer]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,8000,1252)(DT_WSTR,8000)Answer</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load Canonical Answers\Convert Answer to ASCII.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Canonical Answers\Create Lookup Rows"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Create Lookup Rows"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Collections.Generic;   //So I can use List (of T)
using System.Windows.Forms;         //So I can use MessageBox
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 uidAnswer
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool uidAnswer_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 InterviewUid
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool InterviewUid_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 QuestionUid
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool QuestionUid_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String PTAnswer
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool PTAnswer_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class LookupAnswersBuffer: ScriptBuffer

{
    public LookupAnswersBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 uidAnswer
    {
        set
        {
            this[0] = value;
        }
    }
    public bool uidAnswer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 InterviewUid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool InterviewUid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuestionUid
    {
        set
        {
            this[2] = value;
        }
    }
    public bool QuestionUid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 LookupDataUid
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LookupDataUid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public LookupAnswersBuffer LookupAnswersBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != LookupAnswersBuffer)
        {
            LookupAnswersBuffer.SetEndOfRowset();
            LookupAnswersBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"LookupAnswers"))
            {
                LookupAnswersBuffer = new LookupAnswersBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f73137e6dacf4cd3b2cdc8ab0924919f.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0aa5ba92-e81f-4853-b9f5-e8fdb4063ecc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f73137e6dacf4cd3b2cdc8ab0924919f</RootNamespace>
    <AssemblyName>SC_f73137e6dacf4cd3b2cdc8ab0924919f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_f73137e6dacf4cd3b2cdc8ab0924919f" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f73137e6dacf4cd3b2cdc8ab0924919f.Properties.Settings.get_Default():SC_f73137e6dacf4cd3b2cdc8ab0924919f.Properties.Sett" +
    "ings")]

namespace SC_f73137e6dacf4cd3b2cdc8ab0924919f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_f73137e6dacf4cd3b2cdc8ab0924919f</msb:CodeName>
    <msb:DisplayName>SC_f73137e6dacf4cd3b2cdc8ab0924919f</msb:DisplayName>
    <msb:ProjectId>{D82EB517-F37B-4742-964B-2F84E64ED6F6}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f73137e6dacf4cd3b2cdc8ab0924919f.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f73137e6dacf4cd3b2cdc8ab0924919f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f73137e6dacf4cd3b2cdc8ab0924919f")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f73137e6dacf4cd3b2cdc8ab0924919f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f73137e6dacf4cd3b2cdc8ab0924919f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f73137e6dacf4cd3b2cdc8ab0924919f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f73137e6dacf4cd3b2cdc8ab0924919f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f73137e6dacf4cd3b2cdc8ab0924919f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f73137e6dacf4cd3b2cdc8ab0924919f.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
lAUQAGEAlAUQAGkAlAUGAJkAlAUGALkAlAUVAMkAlAUGAHEAlAUbAHEAQwUlAHEAegYpAHkAAQAt
AHEATAQyAHkAQgM3AHEAWwQ8AHEAUwQBANEAlAUQAHEAwQdCAHEA/wZCAHEAowcGAHEA/AYGAIkA
lAUGAOEAqAZGAIkAjgZNAHkA7AZCAIkAGwBXAJEAlAUGAPEAyQBeAPEAyQdlAKEAlAVrAMEAlAUG
AC4ACwAHAS4AEwAQAS4AGwAvAS4AIwA4AS4AKwBhAS4AMwBhAS4AOwBhAS4AQwA4AS4ASwBnAS4A
UwBhAS4AWwB+AUMAYwDIAQMBawDIASEBewDIASkCcwAvAUkCcwAvAVMAAwABAAQACQAIABEACQAT
AAAAigXsAAAAQgTwAAAAmgDsAAAA7QPwAAAAeQDsAAAAvgPwAAAAbwX0AAAAGQTwAAAAigXsAAAA
QgTwAAAAmgDsAAAA7QPwAAAAeQDsAAAAvgPwAAAAVwDsAAAAjgPwAAAATgX4AAAAKwH9AAAADwcC
AQIABQADAAIABgAFAAIABwAHAAIACAAJAAIACQALAAIACgANAAIACwAPAAEADAAPAAIADQARAAEA
DgARAAEAEgATAAEAEwAVAAEAFAAXAAEAFQAZAAEAFgAbAAEAFwAdAAEAGAAfAAEAGQAhAAIAKAAj
AAIAKQAlAAEAKgAlAAIAKwAnAASAAAABAAAAAAAAAAAAAAAAAAQDAAAEAAAAAAAAAAAAAABzACcA
AAAAAA4AAAAAAAAAAAAAAHwARQcAAAAADgAAAAAAAAAAAAAAfABiBwAAAAAEAAAAAAAAAAAAAABz
AGQEAAAAAAAAAAABAAAA7wUAAAAAAEdldEludDMyADxNb2R1bGU+AElucHV0SUQAR2V0T3V0cHV0
SUQAbXNjb3JsaWIASW5wdXRzRmluaXNoZWQATWFya091dHB1dHNGaW5pc2hlZABzZXRfTG9va3Vw
RGF0YVVpZABnZXRfUXVlc3Rpb25VaWQAc2V0X1F1ZXN0aW9uVWlkAGdldF9JbnRlcnZpZXdVaWQA
c2V0X0ludGVydmlld1VpZABkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5
cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAFNDX2Y3
MzEzN2U2ZGFjZjRjZDNiMmNkYzhhYjA5MjQ5MTlmAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
R2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mNzMxMzdlNmRhY2Y0Y2QzYjJjZGM4
YWIwOTI0OTE5Zi5kbGwAc2V0X0xvb2t1cERhdGFVaWRfSXNOdWxsAGdldF9RdWVzdGlvblVpZF9J
c051bGwAc2V0X1F1ZXN0aW9uVWlkX0lzTnVsbABnZXRfSW50ZXJ2aWV3VWlkX0lzTnVsbABzZXRf
SW50ZXJ2aWV3VWlkX0lzTnVsbABnZXRfUFRBbnN3ZXJfSXNOdWxsAHNldF9QVEFuc3dlcl9Jc051
bGwAZ2V0X3VpZEFuc3dlcl9Jc051bGwAc2V0X3VpZEFuc3dlcl9Jc051bGwAU2V0TnVsbABzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhj
ZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRN
YXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAExvb2t1cEFuc3dlcnNCdWZmZXIAU2NyaXB0
QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X1BUQW5zd2VyAHNldF9QVEFuc3dlcgBnZXRf
dWlkQW5zd2VyAHNldF91aWRBbnN3ZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlh
Z25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNDX2Y3MzEzN2U2ZGFjZjRjZDNiMmNkYzhhYjA5MjQ5MTlmLlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19mNzMxMzdlNmRhY2Y0Y2QzYjJjZGM4YWIwOTI0
OTE5Zi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbklu
ZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBD
cmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABnZXRfRW5kT2ZSb3dzZXQAU2V0RW5kT2ZSb3dzZXQA
Z2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGlu
ZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABQcmltZU91dHB1dABBZGRSb3cASW5wdXQwX1Byb2Nl
c3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAAACAm0kAcwBOAHUAbABsACAAcAByAG8A
cABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAu
ACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0A
bgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABtMAG8AbwBrAHUAcABBAG4AcwB3
AGUAcgBzAABxUwBDAF8AZgA3ADMAMQAzADcAZQA2AGQAYQBjAGYANABjAGQAMwBiADIAYwBkAGMA
OABhAGIAMAA5ADIANAA5ADEAOQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAABbyXz+iVPVTLi951DUdO7mAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCSADARI9
HQgSQQMGEj0DBh0IBCABCAgEIAECCAQgAQ4IBSACAQgcAyAAAgYgAgIOEXUFIAEdCAgDBwEIBgAC
CBJBDgYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJhF3NgIDMkQMGEhgDBhIcAwYSEAIG
CAMGEkUDBhJRAwYSVQMGEiQFIAEBEgwDIAAIAyAADgQgAQECCSAEAQgOEj0SQQsgBAEIHQgdEj0S
QQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASJAMAAAEDKAAIAygAAgMoAA4ECAASUQQIABJVBAgA
EiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1ND
X2Y3MzEzN2U2ZGFjZjRjZDNiMmNkYzhhYjA5MjQ5MTlmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAADDcAAAAAAAAAAAAA
JjcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABg3AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AZgA3ADMAMQAzADcAZQA2AGQAYQBjAGYANABjAGQAMwBiADIAYwBkAGMAOABhAGIAMAA5
ADIANAA5ADEAOQBmAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmADcAMwAxADMANwBl
ADYAZABhAGMAZgA0AGMAZAAzAGIAMgBjAGQAYwA4AGEAYgAwADkAMgA0ADkAMQA5AGYALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYANwAz
ADEAMwA3AGUANgBkAGEAYwBmADQAYwBkADMAYgAyAGMAZABjADgAYQBiADAAOQAyADQAOQAxADkA
ZgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmADcAMwAx
ADMANwBlADYAZABhAGMAZgA0AGMAZAAzAGIAMgBjAGQAYwA4AGEAYgAwADkAMgA0ADkAMQA5AGYA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADg3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f73137e6dacf4cd3b2cdc8ab0924919f</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">11</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Canonical Answers\Create Lookup Rows.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Canonical Answers\Create Lookup Rows.Inputs[Input 0].Columns[uidAnswer]"
                      cachedDataType="i4"
                      cachedName="uidAnswer"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[uidAnswer]" />
                    <inputColumn
                      refId="Package\Load Canonical Answers\Create Lookup Rows.Inputs[Input 0].Columns[InterviewUid]"
                      cachedDataType="i4"
                      cachedName="InterviewUid"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[InterviewUid]" />
                    <inputColumn
                      refId="Package\Load Canonical Answers\Create Lookup Rows.Inputs[Input 0].Columns[QuestionUid]"
                      cachedDataType="i4"
                      cachedName="QuestionUid"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[QuestionUid]" />
                    <inputColumn
                      refId="Package\Load Canonical Answers\Create Lookup Rows.Inputs[Input 0].Columns[PTAnswer]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="8000"
                      cachedName="PTAnswer"
                      lineageId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Output].Columns[PTAnswer]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Canonical Answers\Create Lookup Rows.Outputs[LookupAnswers]"
                  hasSideEffects="true"
                  name="LookupAnswers">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Canonical Answers\Create Lookup Rows.Outputs[LookupAnswers].Columns[uidAnswer]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Create Lookup Rows.Outputs[LookupAnswers].Columns[uidAnswer]"
                      name="uidAnswer" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Create Lookup Rows.Outputs[LookupAnswers].Columns[InterviewUid]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Create Lookup Rows.Outputs[LookupAnswers].Columns[InterviewUid]"
                      name="InterviewUid" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Create Lookup Rows.Outputs[LookupAnswers].Columns[QuestionUid]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Create Lookup Rows.Outputs[LookupAnswers].Columns[QuestionUid]"
                      name="QuestionUid" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Create Lookup Rows.Outputs[LookupAnswers].Columns[LookupDataUid]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Create Lookup Rows.Outputs[LookupAnswers].Columns[LookupDataUid]"
                      name="LookupDataUid" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Canonical Answers\Split passthru from lookup answers"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Split passthru from lookup answers"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load Canonical Answers\Split passthru from lookup answers.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Canonical Answers\Split passthru from lookup answers.Inputs[Conditional Split Input].Columns[LookupUID]"
                      cachedDataType="i4"
                      cachedName="LookupUID"
                      lineageId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[LookupUID]" />
                    <inputColumn
                      refId="Package\Load Canonical Answers\Split passthru from lookup answers.Inputs[Conditional Split Input].Columns[PTAnswer]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="8000"
                      cachedName="PTAnswer"
                      lineageId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Output].Columns[PTAnswer]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Canonical Answers\Split passthru from lookup answers.Outputs[PassthruAnswers]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="PassthruAnswers"
                  synchronousInputId="Package\Load Canonical Answers\Split passthru from lookup answers.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output].Columns[LookupUID]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(LookupUID)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Canonical Answers\Split passthru from lookup answers.Outputs[EmptyAnswers]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyAnswers"
                  synchronousInputId="Package\Load Canonical Answers\Split passthru from lookup answers.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Output].Columns[PTAnswer]}) || [TRIM](#{Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Output].Columns[PTAnswer]}) == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(PTAnswer) || TRIM(PTAnswer) == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Canonical Answers\Split passthru from lookup answers.Outputs[LookupAnswers]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="LookupAnswers"
                  synchronousInputId="Package\Load Canonical Answers\Split passthru from lookup answers.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Canonical Answers\Split passthru from lookup answers.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load Canonical Answers\Split passthru from lookup answers.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Canonical Answers\Split passthru from lookup answers.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Split passthru from lookup answers.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Canonical Answers\Split passthru from lookup answers.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Canonical Answers\Split passthru from lookup answers.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Canonical Answers.Paths[ADO NET Source Output]"
              endId="Package\Load Canonical Answers\Convert Answer to ASCII.Inputs[Derived Column Input]"
              name="ADO NET Source Output"
              startId="Package\Load Canonical Answers\Answer JOIN Question.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Load Canonical Answers.Paths[Derived Column Output]"
              endId="Package\Load Canonical Answers\Split passthru from lookup answers.Inputs[Conditional Split Input]"
              name="Derived Column Output"
              startId="Package\Load Canonical Answers\Convert Answer to ASCII.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load Canonical Answers.Paths[LookupAnswers]"
              endId="Package\Load Canonical Answers\Create Lookup Rows.Inputs[Input 0]"
              name="LookupAnswers"
              startId="Package\Load Canonical Answers\Split passthru from lookup answers.Outputs[LookupAnswers]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Restore CC PES backup"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E93390BB-1D36-473F-A06D-14EB8A688551}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Restore CC PES backup"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A5C58ACB-50A0-4381-BA35-507A18733BDE}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="Restore_CCRemote.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{6D521916-4493-4678-B1CC-1432A68B21B6}"
      DTS:From="Package\Restore CC PES backup"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load Canonical Answers" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="193,42"
          Id="Package\Load Canonical Answers"
          TopLeft="512,334" />
        <NodeLayout
          Size="189,42"
          Id="Package\Restore CC PES backup"
          TopLeft="515,203" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="609,245">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,89"
              Start="0,0"
              End="0,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load Canonical Answers">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\Load Canonical Answers\Create Lookup Rows"
          TopLeft="684,486" />
        <NodeLayout
          Size="245,42"
          Id="Package\Load Canonical Answers\Split passthru from lookup answers"
          TopLeft="395,309" />
        <NodeLayout
          Size="185,42"
          Id="Package\Load Canonical Answers\Answer JOIN Question"
          TopLeft="421,92" />
        <NodeLayout
          Size="196,42"
          Id="Package\Load Canonical Answers\Convert Answer to ASCII"
          TopLeft="419,179" />
        <EdgeLayout
          Id="Package\Load Canonical Answers.Paths[ADO NET Source Output]"
          TopLeft="515.25,134">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Canonical Answers.Paths[LookupAnswers]"
          TopLeft="517.5,351">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="254,135"
              Start="0,0"
              End="254,127.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,63.5"
                    Point2="0,67.5"
                    Point3="4,67.5" />
                  <mssgle:LineSegment
                    End="250,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="250,67.5"
                    Point2="254,67.5"
                    Point3="254,71.5" />
                  <mssgle:LineSegment
                    End="254,127.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="92.107421875,72.5,69.78515625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Canonical Answers.Paths[Derived Column Output]"
          TopLeft="517.25,221">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88"
              Start="0,0"
              End="0,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Canonical Answers\Answer JOIN Question">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>