<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/28/2017 2:26:25 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="JFS410232"
  DTS:CreatorName="CUYAHOGA\couchc"
  DTS:DTSID="{08C72D6D-1D75-4791-B1EA-A05C57DB1517}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ZipEncryptTransmitCSVs"
  DTS:PackageType="5"
  DTS:VersionBuild="61"
  DTS:VersionGUID="{394EF8C5-F3EF-48EE-89BA-45303BD64DF6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{94BF8A8D-4207-4DDA-8897-D6ED28536E4E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8A235FAF-CAA7-4B35-8FDB-2E8F7126BBEA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete work files from staging area"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:Disabled="True"
      DTS:DTSID="{168ea242-0771-4f17-b074-5fcab05560d2}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete work files from staging area">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{2c6b78b0-e32a-4336-8011-c9e7a44f5370}"
        DTS:ObjectName="{4CB5843E-74F2-41F2-AC19-F091A4952EBD}">
        <DTS:PropertyExpression
          DTS:Name="Directory">"\\\\" + @[$Project::TargetServer] +  @[$Project::TargetDirectory]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="\\MS-CUYAH32-F21\Shared\Private\IS\Project Plans\Placement Tracking System\ETL\Data\Stage" />
            <FEFEProperty
              FileSpec="*.*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Delete work files from staging area\Delete files from staging dir"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{755D2C85-AB54-487A-86C4-8A842F75CEDF}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete files from staging dir"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::FileName"
              TaskIsSourceVariable="True"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{D8A4396A-B32F-4998-BAE7-F713EA269203}"
          DTS:ObjectName="{D8A4396A-B32F-4998-BAE7-F713EA269203}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Zip &amp; Encrypt csv files, then SFTP to server"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{6BDF4746-96C1-442F-A99D-7D6785B35604}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Zip &amp; Encrypt csv files, then SFTP to server">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{4CB5843E-74F2-41F2-AC19-F091A4952EBD}"
        DTS:ObjectName="{4CB5843E-74F2-41F2-AC19-F091A4952EBD}">
        <DTS:PropertyExpression
          DTS:Name="Directory">"\\\\" + @[$Project::TargetServer] +  @[$Project::TargetDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">"*.csv"</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="\\MS-CUYAH32-F21\Shared\Private\IS\Project Plans\Placement Tracking System\ETL\Data\Stage" />
            <FEFEProperty
              FileSpec="*.csv" />
            <FEFEProperty
              FileNameRetrievalType="2" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Zip &amp; Encrypt csv files, then SFTP to server\Transmit to HHS SFTP server"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{87D7042C-DA84-415C-921F-C67D35DCF87D}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Transmit to HHS SFTP server"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_460e57ed918b48db8e153b615d4348ea"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FileName,$Project::TargetDirectory,$Project::TargetServer,$Project::SFTPPassword,$Project::SFTPUsername,$Project::SFTPDirectory,$Project::SFTPHost,$Project::AppEncryptionFileExtension,$Project::SFTPPort">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_460e57ed918b48db8e153b615d4348ea.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DA3575DC-FECD-453D-B971-80A8476DBFA8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_460e57ed918b48db8e153b615d4348ea</RootNamespace>
    <AssemblyName>ST_460e57ed918b48db8e153b615d4348ea</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Renci.SshNet">
      <HintPath>S:\IS\Downloads\SSH.NET\Compiled DLLs\Renci.SshNet.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using Renci.SshNet;
using Renci.SshNet.Common;
using Renci.SshNet.Sftp;
#endregion

namespace ST_460e57ed918b48db8e153b615d4348ea
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string host = Dts.Variables["$Project::SFTPHost"].Value.ToString();
            int port = (int) Dts.Variables["$Project::SFTPPort"].Value;
            string username = Dts.Variables["$Project::SFTPUsername"].Value.ToString();
            string password = Dts.Variables["$Project::SFTPPassword"].Value.ToString();
            string workingdirectory = Dts.Variables["$Project::SFTPDirectory"].Value.ToString();
            string uploadfile = @"\\" + 
                                Dts.Variables["$Project::TargetServer"].Value.ToString() +
                                Dts.Variables["$Project::TargetDirectory"].Value.ToString() +
                                @"\" +
                                Dts.Variables["User::FileName"].Value.ToString() +
                                Dts.Variables["$Project::AppEncryptionFileExtension"].Value.ToString();

            Console.WriteLine(uploadfile);
            using (var client = new SftpClient(host, port, username, password))
            {
                client.Connect();
                Console.WriteLine("Connected to {0}", host);

                client.ChangeDirectory(workingdirectory);
                Console.WriteLine("Changed directory to {0}", workingdirectory);

                var listDirectory = client.ListDirectory(workingdirectory);
                Console.WriteLine("Listing directory:");
                foreach (var fi in listDirectory)
                {
                    Console.WriteLine(" - " + fi.Name);
                }

                using (var fileStream = new FileStream(uploadfile, FileMode.Open))
                {
                    Console.WriteLine("Uploading {0} ({1:N0} bytes)", uploadfile, fileStream.Length);
                    client.BufferSize = 4 * 1024; // bypass Payload error large files
                    client.UploadFile(fileStream, Path.GetFileName(uploadfile));
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_460e57ed918b48db8e153b615d4348ea</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_460e57ed918b48db8e153b615d4348ea</msb:DisplayName>
		<msb:ProjectId>{8009C1A2-3524-41BA-9FD1-FAE37891D946}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_460e57ed918b48db8e153b615d4348ea.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="b46e4b4603e343f48a710bf53739c145">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>110</msb:LineNumber>
			<msb:ColumnNumber>20</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="ea8d515ed57249ca944f854c42f08913">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>3</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>96</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_460e57ed918b48db8e153b615d4348ea.Properties.Settings.get_Default():ST_460e57ed918b48db8e153b615d4348ea.Properties.Sett" +
    "ings")]

namespace ST_460e57ed918b48db8e153b615d4348ea.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_460e57ed918b48db8e153b615d4348ea")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_460e57ed918b48db8e153b615d4348ea")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_460e57ed918b48db8e153b615d4348ea.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_460e57ed918b48db8e153b615d4348ea.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_460e57ed918b48db8e153b615d4348ea.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_460e57ed918b48db8e153b615d4348ea.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_460e57ed918b48db8e153b615d4348ea.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_460e57ed918b48db8e153b615d4348ea.dll">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
AQABAAAAEABwBcwFVQABAAMAAAEQAAkGzAVpAAMABwADAQAANQYAAE0ABAAKABEAigQAAREAhgEE
AREAtAAIAQYGZAAMAVaAJQYPAVaAZgEPAVAgAAAAAIYAnAQGAAEAvCIAAAAAhhgpBQYAAQDEIgAA
AACDGCkFBgABAMwiAAAAAJMI+wQTAQEA+CIAAAAAkwhuARgBAQD/IgAAAACTCHoBHQEBAAcjAAAA
AJYIZgYjAQIADiMAAAAAhhgpBQYAAgAWIwAAAACRGC8FKAECAAAAAQCKAwkAKQUBABEAKQUGABkA
KQUKACkAKQUQADEAKQUQADkAKQUQAEEAKQUQAEkAKQUQAFEAKQUQAFkAKQUQAGEAKQUQAGkAKQUG
AKEAKQUGAMkAKQUVANkAKQUGAHEALQYwAOEA+wU1AOkAdQQ6APEAgANAAKkAuQNEAAEBQwZIAAkB
VwFOAHkAKQVTABEBUQYGAAkBVwFbAHkAuQYQAHkAyQZhAAwAGwV6ABQAlwaKAIkAIgFEAAEBQwaP
ACkBowaVADEBygEGAJEAKQWZAEEBxwOhAAkBVwGlAHkAkAOsAFEBKwGxAHkABgG2AOEAcgYBAHEA
KQUGAKkAKQUGAFkB9ADEAFkBrAbNALEAKQXTANEAKQUGAAgAFAD2AAgAGAD7ACkAcwBjAS4ACwA7
AS4AEwBEAS4AGwBjAS4AIwBsAS4AKwCVAS4AMwCVAS4AOwCVAS4AQwBsAS4ASwCbAS4AUwCVAS4A
WwCyAUMAYwD7AEkAcwBjAWEAewD7AGMAawD7ABsAAwABAAQAAwAAAP8ELAEAAI4BMQEAAGoGNgEC
AAQAAwACAAUABQABAAYABQACAAcABwByAIMABIAAAAEAAACFGJAzAAAAAAAAbAAAAAQAAAAAAAAA
AAAAANsAkAAAAAAADQAAAAAAAAAAAAAA5ADSAwAAAADgBwEAAAAAAAAAAADtAFkGAAAAAAQAAAAA
AAAAAAAAANsAfgQAAAAADQAAAAAAAAAAAAAA5ABFAAAAAAAAAAAAAQAAAHoFAAAFAAIAAAAAAABJ
RW51bWVyYWJsZWAxAEFjdGlvbmAxAElFbnVtZXJhdG9yYDEASW50MzIASW50NjQAPE1vZHVsZT4A
U3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUXzQ2MGU1
N2VkOTE4YjQ4ZGI4ZTE1M2I2MTVkNDM0OGVhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5H
ZW5lcmljAGRlZmF1bHRJbnN0YW5jZQBGaWxlTW9kZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBVcGxvYWRGaWxlAFNmdHBGaWxlAENvbnNv
bGUAZ2V0X05hbWUAR2V0RmlsZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBX
cml0ZUxpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAHNl
dF9CdWZmZXJTaXplAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABnZXRf
TGVuZ3RoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTVF80NjBlNTdlZDkxOGI0OGRiOGUxNTNiNjE1ZDQzNDhlYS5kbGwARmlsZVN0cmVhbQBn
ZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZv
AFJlbmNpLlNzaE5ldC5TZnRwAGdldF9SZXNvdXJjZU1hbmFnZXIASUVudW1lcmF0b3IAR2V0RW51
bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF80NjBlNTdlZDkxOGI0OGRiOGUxNTNi
NjE1ZDQzNDhlYS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U1RfNDYwZTU3ZWQ5MThiNDhkYjhlMTUzYjYxNWQ0MzQ4ZWEuUHJvcGVydGllcwBnZXRfVmFyaWFi
bGVzAFNldHRpbmdzAFN5c3RlbS5Db2xsZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBDb25jYXQAT2JqZWN0AENvbm5lY3QAUmVuY2kuU3NoTmV0AGdldF9EZWZhdWx0AHNldF9U
YXNrUmVzdWx0AEJhc2VDbGllbnQAU2Z0cENsaWVudABnZXRfQ3VycmVudABNb3ZlTmV4dABnZXRf
QXNzZW1ibHkAQ2hhbmdlRGlyZWN0b3J5AExpc3REaXJlY3RvcnkAAAAlJABQAHIAbwBqAGUAYwB0
ADoAOgBTAEYAVABQAEgAbwBzAHQAACUkAFAAcgBvAGoAZQBjAHQAOgA6AFMARgBUAFAAUABvAHIA
dAAALSQAUAByAG8AagBlAGMAdAA6ADoAUwBGAFQAUABVAHMAZQByAG4AYQBtAGUAAC0kAFAAcgBv
AGoAZQBjAHQAOgA6AFMARgBUAFAAUABhAHMAcwB3AG8AcgBkAAAvJABQAHIAbwBqAGUAYwB0ADoA
OgBTAEYAVABQAEQAaQByAGUAYwB0AG8AcgB5AAAFXABcAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBU
AGEAcgBnAGUAdABTAGUAcgB2AGUAcgAAMyQAUAByAG8AagBlAGMAdAA6ADoAVABhAHIAZwBlAHQA
RABpAHIAZQBjAHQAbwByAHkAAANcAAAdVQBzAGUAcgA6ADoARgBpAGwAZQBOAGEAbQBlAABJJABQ
AHIAbwBqAGUAYwB0ADoAOgBBAHAAcABFAG4AYwByAHkAcAB0AGkAbwBuAEYAaQBsAGUARQB4AHQA
ZQBuAHMAaQBvAG4AACFDAG8AbgBuAGUAYwB0AGUAZAAgAHQAbwAgAHsAMAB9AAAxQwBoAGEAbgBn
AGUAZAAgAGQAaQByAGUAYwB0AG8AcgB5ACAAdABvACAAewAwAH0AACVMAGkAcwB0AGkAbgBnACAA
ZABpAHIAZQBjAHQAbwByAHkAOgAAByAALQAgAAE5VQBwAGwAbwBhAGQAaQBuAGcAIAB7ADAAfQAg
ACgAewAxADoATgAwAH0AIABiAHkAdABlAHMAKQAAcVMAVABfADQANgAwAGUANQA3AGUAZAA5ADEA
OABiADQAOABkAGIAOABlADEANQAzAGIANgAxADUAZAA0ADMANAA4AGUAYQAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAFR4ET7lHVJBgc7uaR7UT3wABCABAQgDIAAB
BSABARERBCABAQ4FIAEBEWEUBwoOCA4ODg4SPRUSQQESRRJFEkkEIAAScQQgABJ1BSABEnkcAyAA
HAMgAA4FAAEOHQ4EAAEBDgcgBAEOCA4OBQACAQ4cECACFRKAjQESRQ4VEoCRAQgHFRKAjQESRQgg
ABUSQQETAAYVEkEBEkUEIAATAAUAAg4ODgMgAAIHIAIBDhGAnQMgAAoGAAMBDhwcBCABAQkEAAEO
Dg0gAwESgKEOFRKAkQELCAABEoCtEYCxBSAAEoC1ByACAQ4SgLUIt3pcVhk04IkIiYRdzYCAzJEI
HO6fi949sQYEAAAAAAQBAAAAAwYSWQMGEl0DBhIQAgYIAwYRFAQAABJZBAAAEl0FAAEBEl0EAAAS
EAMAAAEECAASWQQIABJdBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NUXzQ2MGU1N2VkOTE4YjQ4ZGI4ZTE1M2I2MTVkNDM0OGVhAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41tAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAANw0
AAAAAAAAAAAAAPY0AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoNAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCQM4UYAAABAJAzhRg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADQANgAwAGUANQA3AGUAZAA5ADEAOABiADQAOABkAGIAOABlADEANQAzAGIANgAxADUA
ZAA0ADMANAA4AGUAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADIANwA3AC4AMQAzADIAMAAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADQANgAwAGUANQA3AGUAZAA5ADEAOABiADQAOABkAGIAOABlADEANQAzAGIANgAxADUAZAA0
ADMANAA4AGUAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANAA2ADAAZQA1ADcAZQBkADkAMQA4AGIANAA4AGQAYgA4AGUAMQA1ADMAYgA2
ADEANQBkADQAMwA0ADgAZQBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADQANgAwAGUANQA3AGUAZAA5ADEAOABiADQAOABkAGIAOABlADEANQAzAGIANgAx
ADUAZAA0ADMANAA4AGUAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAyADcANwAuADEAMwAyADAAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAyADcANwAuADEAMwAyADAAMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAINQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="110"
                Column="20" />
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="96"
                Column="3" />
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Zip &amp; Encrypt csv files, then SFTP to server\Zip and Encrypt file"
          DTS:CreationName="Microsoft.ExecuteProcess"
          DTS:Description="Execute Process Task"
          DTS:DTSID="{A8E3938E-63D0-4DB5-B150-0AB164CA7024}"
          DTS:ExecutableType="Microsoft.ExecuteProcess"
          DTS:LocaleID="-1"
          DTS:ObjectName="Zip and Encrypt file"
          DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Arguments">" a -t7z "+ "\""+"\\\\"+@[$Project::TargetServer]  + @[$Project::TargetDirectory] +  "\\"+ @[User::FileName] + ".7z\" "+ "\"" + "\\\\"+@[$Project::TargetServer]  + @[$Project::TargetDirectory] +"\\"+  @[User::FileName] + ".csv"+ "\""+ " -p"+ @[$Project::AppEncryptionKeyOutbound]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="Executable">@[$Project::AppEncryptionLocation]+ "\\"+ @[$Project::AppEncryptionExecutable]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="WorkingDirectory">"\\\\"+@[$Project::TargetServer]  + @[$Project::TargetDirectory]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ExecuteProcessData
              Executable="C:\Program Files\7-Zip\7z.exe"
              Arguments=" a -t7z &quot;\\MS-CUYAH32-F21\Shared\Private\IS\Project Plans\Placement Tracking System\ETL\Data\Stage\.7z&quot; &quot;\\MS-CUYAH32-F21\Shared\Private\IS\Project Plans\Placement Tracking System\ETL\Data\Stage\.csv&quot; -p4bY4-@ZXU-3pa8-HFG$"
              WorkingDirectory="\\MS-CUYAH32-F21\Shared\Private\IS\Project Plans\Placement Tracking System\ETL\Data\Stage"
              WindowStyle="Hidden" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Zip &amp; Encrypt csv files, then SFTP to server.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{BD58AA67-06F6-4E40-B456-081BE689ABD8}"
          DTS:From="Package\Zip &amp; Encrypt csv files, then SFTP to server\Zip and Encrypt file"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Zip &amp; Encrypt csv files, then SFTP to server\Transmit to HHS SFTP server" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{A85209E2-B478-44DF-B808-8F4922D01A9E}"
          DTS:ObjectName="{A85209E2-B478-44DF-B808-8F4922D01A9E}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{526C37E3-5C0E-492D-B53C-BA46960B1E32}"
      DTS:From="Package\Zip &amp; Encrypt csv files, then SFTP to server"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Delete work files from staging area" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="209,42"
          Id="Package\Delete work files from staging area\Delete files from staging dir"
          TopLeft="23,32" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="250,125"
          Size="250,168"
          Id="Package\Delete work files from staging area"
          TopLeft="319.25,485" />
        <NodeLayout
          Size="216,42"
          Id="Package\Zip &amp; Encrypt csv files, then SFTP to server\Transmit to HHS SFTP server"
          TopLeft="22,120" />
        <NodeLayout
          Size="170,42"
          Id="Package\Zip &amp; Encrypt csv files, then SFTP to server\Zip and Encrypt file"
          TopLeft="40.5,25.5" />
        <EdgeLayout
          Id="Package\Zip &amp; Encrypt csv files, then SFTP to server.PrecedenceConstraints[Constraint]"
          TopLeft="127.75,67.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.5"
              Start="0,0"
              End="0,45">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="250,239"
          Size="250,282"
          Id="Package\Zip &amp; Encrypt csv files, then SFTP to server"
          TopLeft="319.25,148.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="444.25,430.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54.5"
              Start="0,0"
              End="0,47">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>