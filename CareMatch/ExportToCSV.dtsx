<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/28/2017 11:28:33 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="JFS410232"
  DTS:CreatorName="CUYAHOGA\couchc"
  DTS:DTSID="{47DCCF65-D37E-4F7B-9F81-EDBDBDC13D9D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ExportToCSV"
  DTS:PackageType="5"
  DTS:VersionBuild="27"
  DTS:VersionGUID="{CFFB7B85-AF93-426B-B62C-FE6F7ED5AFC3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Generate csv files using system_io"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{71194D9C-FB0C-4B35-AF9D-E26EDC16926A}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate csv files using system_io"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_e6c8cc78e5d44dbbbc828b81bf21a7c4"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::SourceDBServer,$Project::TargetDirectory,$Project::TargetServer,$Project::SourceDB,$Project::TargetFileExtension,$Project::TargetFileDelimiter,$Project::SourceDBSchema">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.Properties.Settings.get_Default():ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.Properties.Sett" +
    "ings")]

namespace ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_e6c8cc78e5d44dbbbc828b81bf21a7c4
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            /*
             * Data from each row should be written out as "delimited" string.
             * Ideally, then we'd utilize "CSV" destination but that would require extensive changes.
             * 
             * So, for now, since columns in various of the data tables can contain embedded line control characters
             * I'll be content with replace those with spaces before writing the row out to the destination file
             * 22 Sep 2017 [geg]
             */
            try
            {

                //Declare Variables
                string TargetServer = Dts.Variables["$Project::TargetServer"].Value.ToString();
                string TargetDirectory = Dts.Variables["$Project::TargetDirectory"].Value.ToString();
                string TargetFileDelimiter = Dts.Variables["$Project::TargetFileDelimiter"].Value.ToString();
                string TargetFileExtension = Dts.Variables["$Project::TargetFileExtension"].Value.ToString();
                string SourceDBSchema = Dts.Variables["$Project::SourceDBSchema"].Value.ToString();


                var lineControlReplacements =
                    new[]
                    {
                        new {Old = '\n', New = ' '},
                        new {Old = '\r', New = ' '},
                        new {Old = TargetFileDelimiter[0], New = ' '}
                     };


                //USE ADO.NET Connection from SSIS Package to get data from table
                SqlConnection myADONETConnection = new SqlConnection();
                myADONETConnection = (SqlConnection)(Dts.Connections["SqlServerDB_ADO"].AcquireConnection(Dts.Transaction) as SqlConnection);


                //Read list of Tables with Schema from Database
                string query = "SELECT Name AS TableName FROM sys.tables WHERE is_ms_shipped = 0 and Schema_name(schema_id) = '" + SourceDBSchema + "'";

                //MessageBox.Show(query.ToString());
                SqlCommand cmd = new SqlCommand(query, myADONETConnection);
                DataTable dt = new DataTable();
                dt.Load(cmd.ExecuteReader());

                //Loop through datatable(dt) that has schema and table names
                foreach (DataRow dt_row in dt.Rows)
                {
                    //string SchemaName = "";
                    string TableName = "";
                    object[] array = dt_row.ItemArray;
                    //SchemaName = array[0].ToString();
                    TableName = array[0].ToString();

                    string FileFullPath = @"\\" + TargetServer + TargetDirectory + @"\" + TableName + TargetFileExtension;

                    //Get the data for a table into data table 
                    string data_query = "Select * From [" + TableName + "]";
                    SqlCommand data_cmd = new SqlCommand(data_query, myADONETConnection);
                    DataTable d_table = new DataTable();
                    d_table.Load(data_cmd.ExecuteReader());

                    StreamWriter sw = null;
                    sw = new StreamWriter(FileFullPath, false);

                    // Write the Header Row to File
                    int ColumnCount = d_table.Columns.Count;
                    for (int ic = 0; ic < ColumnCount; ic++)
                    {
                        sw.Write(d_table.Columns[ic]);
                        if (ic < ColumnCount - 1)
                        {
                            sw.Write(TargetFileDelimiter);
                        }
                    }
                    sw.Write(sw.NewLine);

                    // Write All Rows to the File
                    foreach (DataRow dr in d_table.Rows)
                    {
                        for (int ir = 0; ir < ColumnCount; ir++)
                        {
                            if (!Convert.IsDBNull(dr[ir]))
                            {
                                //NB:  No column should have embedded line control or column delimiter characters
                                string dcStr = dr[ir].ToString();
                                foreach (var r in lineControlReplacements)
                                {
                                    dcStr = dcStr.Replace(r.Old, r.New);
                                }

                                sw.Write(dcStr);
                            }
                            if (ir < ColumnCount - 1)
                            {
                                sw.Write(TargetFileDelimiter);
                            }
                        }
                        sw.Write(sw.NewLine);

                    }

                    sw.Close();

                    Dts.TaskResult = (int)ScriptResults.Success;
                }

            }

            catch (Exception exception)
            {

                // Create Log File for Errors
                using (StreamWriter sw = File.CreateText("c:\test.log"))
                //using (StreamWriter sw = File.CreateText(Dts.Variables["User::LogFolder"].Value.ToString() + "\\" +
                //    "ErrorLog_" + datetime + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;


                }
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_e6c8cc78e5d44dbbbc828b81bf21a7c4</msb:CodeName>
		<msb:DisplayName>ST_e6c8cc78e5d44dbbbc828b81bf21a7c4</msb:DisplayName>
		<msb:ProjectId>{157CC713-E896-4B42-A350-9BBC8BB7A8F7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e6c8cc78e5d44dbbbc828b81bf21a7c4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e6c8cc78e5d44dbbbc828b81bf21a7c4")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5009A39A-3F78-48F7-A609-2E5ED50D6C12}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e6c8cc78e5d44dbbbc828b81bf21a7c4</RootNamespace>
    <AssemblyName>ST_e6c8cc78e5d44dbbbc828b81bf21a7c4</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_e6c8cc78e5d44dbbbc828b81bf21a7c4.dll">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
SAR0AAQAiCEAAAAAhgAZBQYABABYJQAAAACGGHwGBgAEAGAlAAAAAIMYfAYGAAQAaCUAAAAAkwgk
BrYBBACUJQAAAACTCJsBuwEEAJslAAAAAJMIpwHAAQQAoyUAAAAAlgjhB8YBBQCqJQAAAACGGHwG
BgAFALIlAAAAAJEYggbLAQUAAAABAMEAAAACAEgIAAABACgEAAABACgECQB8BgEAEQB8BgYAGQB8
BgoAKQB8BhAAMQB8BhAAOQB8BhAAQQB8BhAASQB8BhAAUQB8BhAAWQB8BhAAYQB8BhAAaQB8BgYA
gQB8BhUAiQB8BgYAkQB8BgYA6QB8BgYACQF8BhsADADFACsADADTAC8AcQB8BgYAFADhB0YAFABl
B1AAHADhB0YAHABlB1AAFAAEAWAAHAAEAWAAcQBIBHQAIQHTB3sAmQCtB70AMQFOB8MAOQHyBMkA
QQEeBNAANAB8BtsAIQGbB+MAoQB8BgYAMQGLB+gASQHyBO4AMQFTBdAAUQGcBfUAIQHMB/oAqQB8
BgEBuQB8BgYAqQAGBggBuQC4AA4BuQDDBxUBcQFuBhsBsQASCNAAyQBUCCABIQHMByUBwQB8BisB
uQBsBzEBcQEeCDcBeQHyBDsBiQFMAkIBiQFMAhAAiQGCAXQAyQDyBEcBkQHpBEwBNAC9AFEBNABE
CFYBIQHsAFsBsQAwCGEB0QAYAgYAiQESAgYAMQHtBwEAmQE5CGUBiQF4ARAAmQB8BgYAoQFBAWsB
oQFiCHQB8QB8BnoBEQF8BgYACAAcAJQBCAAgAJkBIQBrAKkCLgALAOgBLgATAPEBLgAbABACLgAj
ABkCLgArAEICLgAzAEICLgA7AEICLgBDABkCLgBLAEgCLgBTAEICLgBbAF8CQQBrAKkCQwBjAJkB
YABzAJkBYwB7AJkBaQCLABACgABzAJkBgwCDAJkBiQCLABACoABzAJkBoQBjAJkBwABzAJkBMwBm
AIUAAgABAAQAAwAFAAUAAADBAM8BAABICNQBAAAoBtkBAAC7Ad4BAADlB+MBAgABAAMAAgACAAUA
AgAKAAcAAgALAAkAAQAMAAkAAgANAAsAIgA+AFgAcQB4ANQABIAAAAEAAABPGQ84AAAAAAAAKgAA
AAQAAAAAAAAAAAAAAIIBlAAAAAAADQAAAAAAAAAAAAAAiwFRBAAAAAAEAAAAAAAAAAAAAACCAYgA
AAAAAAQAAAAAAAAAAAAAAIIB+wQAAAAADQAAAAAAAAAAAAAAiwFhAAAAAAAAAAAAAQAAAM0GAAAG
AAMAAAAAAAQA0gUBAAAABADfBQAAAAAARXF1YWxpdHlDb21wYXJlcmAxADw+Zl9fQW5vbnltb3Vz
VHlwZTBgMgBTVF9lNmM4Y2M3OGU1ZDQ0ZGJiYmM4MjhiODFiZjIxYTdjNAA8TW9kdWxlPgBTeXN0
ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEA
bXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMATG9hZABnZXRfT2xkADxPbGQ+aV9f
RmllbGQAPE5ldz5pX19GaWVsZABTcWxDb21tYW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEdl
dEhhc2hDb2RlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
V3JpdGVMaW5lAGdldF9OZXdMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0
YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UARGVi
dWdnZXJCcm93c2FibGVTdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBXcml0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARGVidWdnZXJCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1Zh
bHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2U2YzhjYzc4ZTVk
NDRkYmJiYzgyOGI4MWJmMjFhN2M0LmRsbABJc0RCTnVsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQBy
ZXNvdXJjZU1hbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AZ2V0X1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFD
b2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAFNxbENv
bm5lY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvADxPbGQ+al9fVFBhcgA8TmV3PmpfX1RQYXIA
SURhdGFSZWFkZXIAU3FsRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAElGb3JtYXRQcm92aWRlcgBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFN0cmVhbVdyaXRlcgBUZXh0V3Jp
dGVyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9z
dGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
ZTZjOGNjNzhlNWQ0NGRiYmJjODI4YjgxYmYyMWE3YzQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2U2YzhjYzc4ZTVkNDRkYmJiYzgyOGI4MWJmMjFhN2M0
LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBFcXVhbHMAZ2V0X0NvbHVtbnMAU3lz
dGVtLkNvbGxlY3Rpb25zAGdldF9Db25uZWN0aW9ucwBnZXRfQ2hhcnMAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMAZ2V0X1Jvd3MAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJyZW50AGdldF9Db3Vu
dABDb252ZXJ0AE1vdmVOZXh0AENyZWF0ZVRleHQAZ2V0X05ldwBEYXRhUm93AGdldF9JdGVtQXJy
YXkAZ2V0X0Fzc2VtYmx5AAAANXsAewAgAE8AbABkACAAPQAgAHsAMAB9ACwAIABOAGUAdwAgAD0A
IAB7ADEAfQAgAH0AfQAALSQAUAByAG8AagBlAGMAdAA6ADoAVABhAHIAZwBlAHQAUwBlAHIAdgBl
AHIAADMkAFAAcgBvAGoAZQBjAHQAOgA6AFQAYQByAGcAZQB0AEQAaQByAGUAYwB0AG8AcgB5AAA7
JABQAHIAbwBqAGUAYwB0ADoAOgBUAGEAcgBnAGUAdABGAGkAbABlAEQAZQBsAGkAbQBpAHQAZQBy
AAA7JABQAHIAbwBqAGUAYwB0ADoAOgBUAGEAcgBnAGUAdABGAGkAbABlAEUAeAB0AGUAbgBzAGkA
bwBuAAAxJABQAHIAbwBqAGUAYwB0ADoAOgBTAG8AdQByAGMAZQBEAEIAUwBjAGgAZQBtAGEAAB9T
AHEAbABTAGUAcgB2AGUAcgBEAEIAXwBBAEQATwAAgL9TAEUATABFAEMAVAAgAE4AYQBtAGUAIABB
AFMAIABUAGEAYgBsAGUATgBhAG0AZQAgAEYAUgBPAE0AIABzAHkAcwAuAHQAYQBiAGwAZQBzACAA
VwBIAEUAUgBFACAAaQBzAF8AbQBzAF8AcwBoAGkAcABwAGUAZAAgAD0AIAAwACAAYQBuAGQAIABT
AGMAaABlAG0AYQBfAG4AYQBtAGUAKABzAGMAaABlAG0AYQBfAGkAZAApACAAPQAgACcAAQMnAAEB
AAVcAFwAAANcAAAfUwBlAGwAZQBjAHQAIAAqACAARgByAG8AbQAgAFsAAANdAAAVYwA6AAkAZQBz
AHQALgBsAG8AZwAAcVMAVABfAGUANgBjADgAYwBjADcAOABlADUAZAA0ADQAZABiAGIAYgBjADgA
MgA4AGIAOAAxAGIAZgAyADEAYQA3AGMANAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAMVrel5AyeESc6h8H+H61+AAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERPQYg
AQERgIEIFRIIAhMAEwEDBhMAAwYTAQoHARUSCAITABMBBxUSgI0BEwAJAAAVEoCNARMAByACAhMA
EwAHFRKAjQETAQUgAQgTAAoHBBMAEwATARMBAhMAAyAADgITAQkAAw4SgJUOHRw3BxkODg4ODh0V
EggCAwMSURJVElkOElUSXRJhCAgSWRJlCA4dFRIIAgMDCBUSCAIDAxJpEm0SYQUgABKAmQUgABKA
nQYgARKAoRwDIAAcBhUSCAIDAwcgAgETABMBBCABAwgFIAASgKUGIAESgKkcBCABHBwGAAMODg4O
BiACAQ4SUQUgABKArQYgAQESgLEFIAASgLUEIAASWQQgAB0cBQABDh0OBSACAQ4CBSAAEoC9AyAA
CAYgARKAwQgEIAEBHAQgARwIBAABAhwEIAATAAQgABMBBSACDgMDAyAAAgUAARJhDggAARKA0RGA
1QUgABKA2QcgAgEOEoDZCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEnkDBhJ9AwYSFAIG
CAMGERgEIAECHAQAABJ5BAAAEn0FAAEBEn0EAAASFAMAAAEEKAATAAQoABMBBAgAEnkECAASfQQI
ABIUCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNT
VF9lNmM4Y2M3OGU1ZDQ0ZGJiYmM4MjhiODFiZjIxYTdjNAAABQEAAAAAFgEAEUNvcHlyaWdodCBA
ICAyMDE3AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3Bs
YXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQgBAAAAAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAIQ7AAAAAAAA
AAAAAJ47AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQOwAAAAAAAAAAAAAAAF9Db3JEbGxNYWlu
AG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAPOE8ZAAABAA84Txk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfAGUANgBjADgAYwBjADcAOABlADUAZAA0ADQAZABiAGIAYgBjADgAMgA4AGIAOAAxAGIAZgAy
ADEAYQA3AGMANAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADQA
NwA5AC4AMQA0ADMANQAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGUANgBjADgAYwBjADcAOABlADUAZAA0ADQAZABiAGIAYgBjADgAMgA4AGIAOAAxAGIAZgAyADEA
YQA3AGMANAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AZQA2AGMAOABjAGMANwA4AGUANQBkADQANABkAGIAYgBiAGMAOAAyADgAYgA4ADEA
YgBmADIAMQBhADcAYwA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGUANgBjADgAYwBjADcAOABlADUAZAA0ADQAZABiAGIAYgBjADgAMgA4AGIAOAAxAGIA
ZgAyADEAYQA3AGMANAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgA0ADcAOQAuADEANAAzADUAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANgA0ADcAOQAuADEANAAzADUAMQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACwOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="241,42"
          Id="Package\Generate csv files using system_io"
          TopLeft="373.5,140.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>